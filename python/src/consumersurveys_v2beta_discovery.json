{
 "kind": "discovery#restDescription",
 "discoveryVersion": "v1",
 "id": "consumersurveys:v2beta",
 "name": "consumersurveys",
 "version": "v2beta",
 "revision": "20151201",
 "title": "Consumer Surveys API",
 "description": "API for Google Consumer Surveys.",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/consumersurveys/v2beta/",
 "basePath": "/consumersurveys/v2beta/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "consumersurveys/v2beta/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "FieldMask": {
   "id": "FieldMask",
   "type": "object",
   "properties": {
    "fields": {
     "type": "array",
     "items": {
      "$ref": "FieldMask"
     }
    },
    "id": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "PageInfo": {
   "id": "PageInfo",
   "type": "object",
   "properties": {
    "resultPerPage": {
     "type": "integer",
     "format": "int32"
    },
    "startIndex": {
     "type": "integer",
     "format": "int32"
    },
    "totalResults": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "ResultsGetRequest": {
   "id": "ResultsGetRequest",
   "type": "object",
   "properties": {
    "resultMask": {
     "$ref": "ResultsMask"
    }
   }
  },
  "ResultsMask": {
   "id": "ResultsMask",
   "type": "object",
   "properties": {
    "fields": {
     "type": "array",
     "items": {
      "$ref": "FieldMask"
     }
    },
    "projection": {
     "type": "string"
    }
   }
  },
  "Survey": {
   "id": "Survey",
   "type": "object",
   "description": "Message defining the Survey collections for the REST API.",
   "properties": {
    "approximateDaysToComplete": {
     "type": "number",
     "description": "Optional ideal number of days that the survey should complete in. Fractional values are supported. Note that the survey may complete in a shorter or longer period of time than requested, but it will not complete in a significantly shorter period than requested.",
     "format": "float"
    },
    "audience": {
     "$ref": "SurveyAudience",
     "description": "Targeting criteria message containing demographic information"
    },
    "cost": {
     "$ref": "SurveyCost",
     "description": "Cost to run the survey and collect the necessary number of responses."
    },
    "customerData": {
     "type": "string",
     "description": "Additional information to store on behalf of the API consumer and associate with this question. This binary blob is treated as opaque. This field is limited to 64K bytes.",
     "format": "byte"
    },
    "description": {
     "type": "string",
     "description": "Text description of the survey."
    },
    "jsonSpec": {
     "type": "string",
     "description": "JSON string defining the survey specification and definitions."
    },
    "owners": {
     "type": "array",
     "description": "List of email addresses for survey owners. Must contain at least the address of the user making the API call.",
     "items": {
      "type": "string"
     },
     "annotations": {
      "required": [
       "consumersurveys.surveys.insert",
       "consumersurveys.surveys.update"
      ]
     }
    },
    "questions": {
     "type": "array",
     "description": "List of questions defining the survey.",
     "items": {
      "$ref": "SurveyQuestion"
     },
     "annotations": {
      "required": [
       "consumersurveys.surveys.insert",
       "consumersurveys.surveys.update"
      ]
     }
    },
    "recurringFrequency": {
     "type": "string",
     "description": "Survey frequency for recurring surveys that are run on a repeated basis."
    },
    "state": {
     "type": "string",
     "description": "State that the survey is in. Can be modified to start, stop, or pause survey."
    },
    "surveyUrlId": {
     "type": "string",
     "description": "Unique survey ID, that is viewable in the URL of the Survey Creator UI"
    },
    "title": {
     "type": "string",
     "description": "Optional name that will be given to the survey."
    },
    "wantedResponseCount": {
     "type": "integer",
     "description": "Number of responses desired for the survey.",
     "format": "int32"
    }
   }
  },
  "SurveyAudience": {
   "id": "SurveyAudience",
   "type": "object",
   "description": "Specifications for the target audience of a survey run through the API.",
   "properties": {
    "ages": {
     "type": "array",
     "description": "Optional list of age buckets to target. Supported age buckets are: ['18-24', '25-34', '35-44', '45-54', '55-64', '65+']",
     "items": {
      "type": "string"
     }
    },
    "country": {
     "type": "string",
     "description": "Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2 character language codes, e.g. 'US'",
     "annotations": {
      "required": [
       "consumersurveys.surveys.insert",
       "consumersurveys.surveys.update"
      ]
     }
    },
    "gender": {
     "type": "string",
     "description": "Optional gender to target."
    },
    "languages": {
     "type": "array",
     "description": "Language code that surveys should be targeted to, e.g. 'en-US'. Surveys may target bilingual users by specifying a list of language codes (e.g. 'de' and 'en-US'). In that case, all languages will be used for targeting users but the survey content (which is displayed) must match the first language listed. Accepts standard BCP47 language codes. See specification.",
     "items": {
      "type": "string"
     },
     "annotations": {
      "required": [
       "consumersurveys.surveys.insert",
       "consumersurveys.surveys.update"
      ]
     }
    },
    "populationSource": {
     "type": "string",
     "description": "Online population source where the respondents are sampled from."
    }
   }
  },
  "SurveyCost": {
   "id": "SurveyCost",
   "type": "object",
   "description": "Message defining the cost to run a given survey through API.",
   "properties": {
    "currencyCode": {
     "type": "string",
     "description": "Currency code that the cost is given in."
    },
    "nanos": {
     "type": "string",
     "description": "Cost of survey in nano units of the given currency.",
     "format": "int64"
    }
   }
  },
  "SurveyQuestion": {
   "id": "SurveyQuestion",
   "type": "object",
   "description": "Message defining the question specifications.",
   "properties": {
    "answerCountLimitPerOption": {
     "type": "integer",
     "description": "The number of answers needed for each option for a multiple choice question. When set, when the number of answers for an option is reached, the option is excluded from the question. The answer_count_limit given will be targeted at best but you may receive more answers than expected.",
     "format": "int32"
    },
    "answerOrder": {
     "type": "string",
     "description": "The randomization option for multiple choice and multi-select questions. If not specified, the API defaults to randomize."
    },
    "answers": {
     "type": "array",
     "description": "Required list of answer options for a question.",
     "items": {
      "type": "string"
     }
    },
    "customerData": {
     "type": "string",
     "description": "Additional information to store on behalf of the API consumer and associate with this question. This binary blob is treated as opaque and limited to 64K.",
     "format": "byte"
    },
    "hasOther": {
     "type": "boolean",
     "description": "Option to allow open-ended text box for multi and multi-select question types. This can be used with SINGLE_ANSWER, SINGLE_ANSWER_WITH_IMAGE, MULTIPLE_ANSWERS, and MULTIPLE_ANSWERS_WITH_IMAGE question types."
    },
    "highValueLabel": {
     "type": "string",
     "description": "For rating questions, the text for the higher end of the scale, such as 'Best'. For numeric questions, a string representing a floating-point that is the maximum allowed number for a response."
    },
    "images": {
     "type": "array",
     "items": {
      "$ref": "SurveyQuestionImage"
     }
    },
    "lastAnswerPositionPinned": {
     "type": "boolean",
     "description": "Currently only support pinning an answer option to the last position."
    },
    "lowValueLabel": {
     "type": "string",
     "description": "For rating questions, the text for the lower end of the scale, such as 'Worst'. For numeric questions, a string representing a floating-point that is the minimum allowed number for a response."
    },
    "numAnswersDisplayed": {
     "type": "integer",
     "description": "The number of answers to be displayed for a multiple choice question. If not set, it is the number of answers. If set, the answers shown are chosen randomly.",
     "format": "int32"
    },
    "numStars": {
     "type": "string",
     "description": "Number of stars to use for ratings questions."
    },
    "openTextPlaceholder": {
     "type": "string",
     "description": "Placeholder text for an open text question."
    },
    "openTextSuggestions": {
     "type": "array",
     "description": "A list of suggested answers for open text question auto-complete.",
     "items": {
      "type": "string"
     }
    },
    "question": {
     "type": "string",
     "description": "Required question text shown to the respondent."
    },
    "sentimentText": {
     "type": "string",
     "description": "Used by the rating scale with text question type, this text goes along with the \"question\" field when presented to the respondent and is the text a 'rating with text' question asks a user to rate."
    },
    "singleLineResponse": {
     "type": "boolean",
     "description": "Option to allow multiple line open text responses instead of a single line response."
    },
    "thresholdAnswers": {
     "type": "array",
     "description": "The threshold/screener answer options, which will screen a user into the rest of the survey. These will be a subset of the answer option strings.",
     "items": {
      "type": "string"
     }
    },
    "type": {
     "type": "string",
     "description": "Required field defining the question type. For details about configuring different type of questions, consult the  question configuration guide.",
     "annotations": {
      "required": [
       "consumersurveys.surveys.insert",
       "consumersurveys.surveys.update"
      ]
     }
    },
    "unitOfMeasurementLabel": {
     "type": "string",
     "description": "Optional unit of measurement for display (ie. hours, people, miles)."
    },
    "unitsPosition": {
     "type": "string",
     "description": "Where the unit_of_measurement string should appear in relation to the input field."
    },
    "videoId": {
     "type": "string",
     "description": "The youtube video id to be show in video questions."
    }
   }
  },
  "SurveyQuestionImage": {
   "id": "SurveyQuestionImage",
   "type": "object",
   "description": "Container object for image data and alt_text.",
   "properties": {
    "altText": {
     "type": "string",
     "description": "The alt text property used in image tags is required for all images."
    },
    "data": {
     "type": "string",
     "description": "Inline jpeg, gif, tiff, bmp, or png image raw bytes for an image question types.",
     "format": "byte"
    },
    "url": {
     "type": "string",
     "description": "The read-only url for the hosted images."
    }
   }
  },
  "SurveyResults": {
   "id": "SurveyResults",
   "type": "object",
   "description": "Response message for API requests to get survey results.",
   "properties": {
    "status": {
     "type": "string",
     "description": "Human readable string describing the status of the request"
    },
    "surveyUrlId": {
     "type": "string",
     "description": "External survey id as viewable by survey owners in the editor view."
    }
   }
  },
  "SurveysDeleteResponse": {
   "id": "SurveysDeleteResponse",
   "type": "object",
   "properties": {
    "requestId": {
     "type": "string",
     "description": "Unique request id used for logging and debugging. Please include in any error reporting or troubleshooting requests."
    }
   }
  },
  "SurveysListResponse": {
   "id": "SurveysListResponse",
   "type": "object",
   "properties": {
    "pageInfo": {
     "$ref": "PageInfo"
    },
    "requestId": {
     "type": "string",
     "description": "Unique request id used for logging and debugging. Please include in any error reporting or troubleshooting requests."
    },
    "resources": {
     "type": "array",
     "description": "Survey object containing the specifications.",
     "items": {
      "$ref": "Survey"
     }
    },
    "tokenPagination": {
     "$ref": "TokenPagination"
    }
   }
  },
  "SurveysStartResponse": {
   "id": "SurveysStartResponse",
   "type": "object",
   "properties": {
    "requestId": {
     "type": "string",
     "description": "Unique request id used for logging and debugging. Please include in any error reporting or troubleshooting requests."
    },
    "resource": {
     "$ref": "Survey",
     "description": "Survey object containing the specification of the started Survey."
    }
   }
  },
  "SurveysStopResponse": {
   "id": "SurveysStopResponse",
   "type": "object",
   "properties": {
    "requestId": {
     "type": "string",
     "description": "Unique request id used for logging and debugging. Please include in any error reporting or troubleshooting requests."
    },
    "resource": {
     "$ref": "Survey",
     "description": "Survey object containing the specification of the stopped Survey."
    }
   }
  },
  "TokenPagination": {
   "id": "TokenPagination",
   "type": "object",
   "properties": {
    "nextPageToken": {
     "type": "string"
    },
    "previousPageToken": {
     "type": "string"
    }
   }
  }
 },
 "resources": {
  "results": {
   "methods": {
    "get": {
     "id": "consumersurveys.results.get",
     "path": "surveys/{surveyUrlId}/results",
     "httpMethod": "GET",
     "description": "Method for retrieving survey results.",
     "parameters": {
      "surveyUrlId": {
       "type": "string",
       "description": "External Url Id for the survey.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "surveyUrlId"
     ],
     "request": {
      "$ref": "ResultsGetRequest"
     },
     "response": {
      "$ref": "SurveyResults"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ],
     "supportsMediaDownload": true
    }
   }
  },
  "surveys": {
   "methods": {
    "delete": {
     "id": "consumersurveys.surveys.delete",
     "path": "surveys/{surveyUrlId}",
     "httpMethod": "DELETE",
     "description": "Method for deleting a survey by url id.",
     "parameters": {
      "surveyUrlId": {
       "type": "string",
       "description": "External Url Id for the survey.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "surveyUrlId"
     ],
     "response": {
      "$ref": "SurveysDeleteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    },
    "get": {
     "id": "consumersurveys.surveys.get",
     "path": "surveys/{surveyUrlId}",
     "httpMethod": "GET",
     "description": "Method for retrieving a survey json specification, state, and cost.",
     "parameters": {
      "surveyUrlId": {
       "type": "string",
       "description": "External Url Id for the survey.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "surveyUrlId"
     ],
     "response": {
      "$ref": "Survey"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    },
    "insert": {
     "id": "consumersurveys.surveys.insert",
     "path": "surveys",
     "httpMethod": "POST",
     "description": "Method for creating a survey from a json specification.",
     "request": {
      "$ref": "Survey"
     },
     "response": {
      "$ref": "Survey"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    },
    "list": {
     "id": "consumersurveys.surveys.list",
     "path": "surveys",
     "httpMethod": "GET",
     "description": "Method for listing the surveys owned by the caller.",
     "parameters": {
      "maxResults": {
       "type": "integer",
       "format": "uint32",
       "location": "query"
      },
      "startIndex": {
       "type": "integer",
       "format": "uint32",
       "location": "query"
      },
      "token": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "SurveysListResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    },
    "start": {
     "id": "consumersurveys.surveys.start",
     "path": "surveys/start",
     "httpMethod": "POST",
     "description": "Method for starting a survey.",
     "parameters": {
      "resourceId": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "SurveysStartResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    },
    "stop": {
     "id": "consumersurveys.surveys.stop",
     "path": "surveys/stop",
     "httpMethod": "POST",
     "description": "Method for stopping a survey.",
     "parameters": {
      "resourceId": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "SurveysStopResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    },
    "update": {
     "id": "consumersurveys.surveys.update",
     "path": "surveys/{surveyUrlId}",
     "httpMethod": "PUT",
     "description": "Method for updating a survey.",
     "parameters": {
      "surveyUrlId": {
       "type": "string",
       "description": "External Url Id for the survey.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "surveyUrlId"
     ],
     "request": {
      "$ref": "Survey"
     },
     "response": {
      "$ref": "Survey"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    }
   }
  }
 }
}
